/*! angular-applicationinsights version 0.3.1 2019-04-16 */
var Tools = function () { function a(b) { a.isDefined = b.isDefined, a.isUndefined = b.isUndefined, a.isObject = b.isObject, a.isArray = b.isArray, a.isString = b.isString, a.extend = b.extend, a.toJson = b.toJson, a.fromJson = b.fromJson, a.forEach = b.forEach, a.copy = b.copy, a.noop = b.noop } return a.isNullOrUndefined = function (b) { return a.isUndefined(b) || null === b }, a.isNumber = function (a) { return !isNaN(parseFloat(a)) && isFinite(a) }, a.generateGuid = function () { return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (a) { var b = 16 * Math.random() | 0, c = "x" == a ? b : 3 & b | 8; return c.toString(16) }) }, a }(), AppInsightsStorage = function () { function a(b) { var c = this; this._config = Tools.extend(a.defaultConfig, b), this._self = this._config, this._prefix = this._config.prefix, this._cookie = this._config.cookie, this._notify = this._config.notify, this._storageType = this._config.storageType, this._$rootScope = this._config.rootScope, this._$window = this._config.window, this._$document = this._config.document, this._$parse = this._config.parse, this._$document ? this._$document[0] && (this._$document = this._$document[0]) : this._$document = document, "." !== this._prefix.substr(-1) && (this._prefix = this._prefix ? this._prefix + "." : ""), this._deriveQualifiedKey = function (a) { return c._prefix + a } } return a.prototype.isStringNumber = function (a) { return /^-?\d+\.?\d*$/.test(a.replace(/["']/g, "")) }, a.prototype.browserSupportsLocalStorage = function () { try { var a = this._storageType in this._$window && null !== this._$window[this._storageType], b = this._deriveQualifiedKey("__" + Math.round(1e7 * Math.random())); return a && (this._webStorage = this._$window[this._storageType], this._webStorage.setItem(b, ""), this._webStorage.removeItem(b)), a } catch (c) { return this._storageType = "cookie", this._$rootScope.$broadcast("AngularAppInsights.Storage.notification.error", c.message), !1 } }, a.prototype.browserSupportsCookies = function () { try { return this._$window.navigator.cookieEnabled || "cookie" in this._$document && (this._$document.cookie.length > 0 || (this._$document.cookie = "test").indexOf.call(this._$document.cookie, "test") > -1) } catch (a) { return this._$rootScope.$broadcast("AngularAppInsights.Storage.notification.error", a.message), !1 } }, a.prototype.addToCookies = function (a, b) { if (Tools.isUndefined(b)) return !1; if ((Tools.isArray(b) || Tools.isObject(b)) && (b = Tools.toJson(b)), !this.browserSupportsCookies) return this._$rootScope.$broadcast("AngularAppInsights.Storage.notification.error", "COOKIES_NOT_SUPPORTED"), !1; try { var c = "", d = new Date, e = ""; if (null === b ? (d.setTime(d.getTime() + -864e5), c = "; expires=" + d.toUTCString(), b = "") : 0 !== this._cookie.expiry && (d.setTime(d.getTime() + 24 * this._cookie.expiry * 60 * 60 * 1e3), c = "; expires=" + d.toUTCString()), a) { var f = "; path=" + this._cookie.path; this._cookie.domain && (e = "; domain=" + this._cookie.domain), this._$document.cookie = this._deriveQualifiedKey(a) + "=" + encodeURIComponent(b) + c + f + e } } catch (g) { return this._$rootScope.$broadcast("AngularAppInsights.Storage.notification.error", g.message), !1 } return !0 }, a.prototype.getFromCookies = function (a) { if (!this.browserSupportsCookies) return this._$rootScope.$broadcast("AngularAppInsights.Storage.notification.error", "COOKIES_NOT_SUPPORTED"), !1; for (var b = this._$document.cookie && this._$document.cookie.split(";") || [], c = 0; c < b.length; c++) { for (var d = b[c]; " " === d.charAt(0);)d = d.substring(1, d.length); if (0 === d.indexOf(this._deriveQualifiedKey(a) + "=")) { var e = decodeURIComponent(d.substring(this._prefix.length + a.length + 1, d.length)); try { var f = JSON.parse(e); return Tools.fromJson(f) } catch (g) { return e } } } return null }, a.prototype.addToLocalStorage = function (a, b) { if (Tools.isUndefined(b) ? b = null : (Tools.isObject(b) || Tools.isArray(b) || Tools.isNumber(+b || b)) && (b = Tools.toJson(b)), !this.browserSupportsLocalStorage() || "cookie" === this._self.storageType) return this.browserSupportsLocalStorage() || this._$rootScope.$broadcast("AngularAppInsights.Storage.notification.warning", "LOCAL_STORAGE_NOT_SUPPORTED"), this._notify.setItem && this._$rootScope.$broadcast("AngularAppInsights.Storage.notification.setitem", { key: a, newvalue: b, storageType: "cookie" }), this.addToCookies(a, b); try { (Tools.isObject(b) || Tools.isArray(b)) && (b = Tools.toJson(b)), this._webStorage && this._webStorage.setItem(this._deriveQualifiedKey(a), b), this._notify.setItem && this._$rootScope.$broadcast("AngularAppInsights.Storage.notification.setitem", { key: a, newvalue: b, storageType: this._self.storageType }) } catch (c) { return this._$rootScope.$broadcast("AngularAppInsights.Storage.notification.error", c.message), this.addToCookies(a, b) } return !0 }, a.prototype.getFromLocalStorage = function (a) { if (!this.browserSupportsLocalStorage() || "cookie" === this._self.storageType) return this.browserSupportsLocalStorage() || this._$rootScope.$broadcast("AngularAppInsights.Storage.notification.warning", "LOCAL_STORAGE_NOT_SUPPORTED"), this.getFromCookies(a); var b = this._webStorage ? this._webStorage.getItem(this._deriveQualifiedKey(a)) : null; return b && "null" !== b ? "{" === b.charAt(0) || "[" === b.charAt(0) || this.isStringNumber(b) ? Tools.fromJson(b) : b : null }, a.prototype.getStorageType = function () { return this._storageType }, a.prototype.isSupported = function () { return this.browserSupportsLocalStorage() }, a.prototype.set = function (a, b) { return this.addToLocalStorage(a, b) }, a.prototype.get = function (a) { return this.getFromLocalStorage(a) }, a.prototype.deriveKey = function (a) { return this._deriveQualifiedKey(a) }, a.prototype.isCookiesSupported = function () { return this.browserSupportsCookies() }, a.prototype.setCookie = function (a, b) { this.addToCookies(a, b) }, a.prototype.getCookie = function (a) { return this.getFromCookies(a) }, a.defaultConfig = { prefix: "ls", storageType: "localStorage", cookie: { expiry: 30, path: "/" }, notify: { setItem: !0, removeItem: !1 } }, a }(), TelemetryRequest = function () { function a() { } return a }(), TelemetryRequestHeaders = function () { function a() { } return a }(), StackFrame = function () { function a(a, b, c, d, e, f) { Tools.isUndefined(a) || this.setFunctionName(a), Tools.isUndefined(e) || this.setColumnNumber(e), Tools.isUndefined(b) || this.setArgs(b), Tools.isUndefined(c) || this.setFileName(c), Tools.isUndefined(d) || this.setLineNumber(d), Tools.isUndefined(f) || this.setLevelNumber(f) } return a.prototype.setFunctionName = function (a) { this.method = String(a) }, a.prototype.setArgs = function (a) { if ("[object Array]" !== Object.prototype.toString.call(a)) throw new TypeError("Args must be an Array"); this.args = a }, a.prototype.setFileName = function (a) { this.fileName = String(a) }, a.prototype.setLineNumber = function (a) { return Tools.isNumber(a) ? void (this.line = Number(a)) : void (this.line = void 0) }, a.prototype.setColumnNumber = function (a) { return Tools.isNumber(a) ? void (this.columnNumber = Number(a)) : void (this.columnNumber = void 0) }, a.prototype.setLevelNumber = function (a) { if (!Tools.isNumber(a)) throw new TypeError("Level Number must be a Number"); this.level = Number(a) }, a.prototype.toString = function () { var a = this.method || "{anonymous}", b = "(" + (this.args || []).join(",") + ")", c = this.fileName ? "@" + this.fileName : "", d = Tools.isNumber(this.line) ? ":" + this.line : "", e = Tools.isNumber(this.columnNumber) ? ":" + this.columnNumber : ""; return a + b + c + d + e }, a }(), StackParser = function () { function a() { } return a.parse = function (b) { return "undefined" != typeof b.stacktrace || "undefined" != typeof b["opera#sourceloc"] ? a.parseOpera(b) : b.stack && b.stack.match(a.chromeIeStackRegexp) ? a.parseChromeOrInternetExplorer(b) : b.stack && b.stack.match(a.firefoxSafariStackRegexp) ? a.parseFireFoxOrSafari(b) : null }, a.extractLocation = function (a) { if (-1 === a.indexOf(":")) return []; var b = a.split(":"), c = b.pop(), d = b[b.length - 1]; if (!isNaN(parseFloat(d)) && isFinite(d)) { var e = b.pop(); return [b.join(":"), e, c] } return [b.join(":"), c, void 0] }, a.parseChromeOrInternetExplorer = function (a) { var b = this, c = 0; return a.stack.split("\n").slice(1).map(function (a) { var d = a.replace(/^\s+/, "").split(/\s+/).slice(1), e = void 0 !== d[0] ? b.extractLocation(d.pop().replace(/[\(\)\s]/g, "")) : ["unknown", "unknown", "unknown"], f = d[0] && "Anonymous" !== d[0] ? d[0] : "unknown"; return new StackFrame(f, void 0, e[0], e[1], e[2], c++) }, this) }, a.parseFireFoxOrSafari = function (b) { var c = this, d = 0; return b.stack.split("\n").filter(function (b) { return !!b.match(a.firefoxSafariStackRegexp) }, this).map(function (a) { var b = a.split("@"), e = c.extractLocation(b.pop()), f = b.shift() || "unknown"; return new StackFrame(f, void 0, e[0], e[1], e[2], d++) }, this) }, a.parseOpera = function (a) { return !a.stacktrace || a.message.indexOf("\n") > -1 && a.message.split("\n").length > a.stacktrace.split("\n").length ? this.parseOpera9(a) : a.stack ? this.parseOpera11(a) : this.parseOpera10(a) }, a.parseOpera9 = function (a) { for (var b = /Line (\d+).*script (?:in )?(\S+)/i, c = a.message.split("\n"), d = [], e = 2, f = c.length; f > e; e += 2) { var g = b.exec(c[e]); if (g) { var h = 0; d.push(new StackFrame(void 0, void 0, g[2], g[1], void 0, h++)) } } return d }, a.parseOpera10 = function (a) { for (var b = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i, c = a.stacktrace.split("\n"), d = [], e = 0, f = c.length; f > e; e += 2) { var g = b.exec(c[e]); if (g) { var h = 0; d.push(new StackFrame(g[3] || void 0, void 0, g[2], g[1], void 0, h++)) } } return d }, a.parseOpera11 = function (b) { var c = 0; return b.stack.split("\n").filter(function (b) { return !!b.match(a.firefoxSafariStackRegexp) && !b.match(/^Error created at/) }, this).map(function (b) { var d, e = b.split("@"), f = a.extractLocation(e.pop()), g = e.shift() || "", h = g.replace(/<anonymous function(: (\w+))?>/, "$2").replace(/\([^\)]*\)/g, "") || void 0; g.match(/\(([^\)]*)\)/) && (d = g.replace(/^[^\(]+\(([^\)]*)\)$/, "$1")); var i = void 0 === d || "[arguments not available]" === d ? void 0 : d ? d.split(",") : ""; return new StackFrame(h, i, f[0], f[1], f[2], c++) }, this) }, a.firefoxSafariStackRegexp = /\S+\:\d+/, a.chromeIeStackRegexp = /\s+at /, a }(), LogInterceptor = function () { function a(b, c) { var d = this; this._angular = c, this._noop = this._angular.noop, a.interceptFuntion = this._noop, b.decorator("$log", ["$delegate", function (a) { return d._debugFn = a.debug, d._infoFn = a.info, d._warnFn = a.warn, d._errorFn = a.error, d._logFn = a.log, a.debug = c.extend(d.delegator(d._debugFn, "debug"), d._debugFn), a.info = c.extend(d.delegator(d._infoFn, "info"), d._infoFn), a.warn = c.extend(d.delegator(d._warnFn, "warn"), d._warnFn), a.error = c.extend(d.delegator(d._errorFn, "error"), d._errorFn), a.log = c.extend(d.delegator(d._logFn, "log"), d._logFn), a }]) } return a.prototype.setInterceptFunction = function (b) { a.interceptFuntion = b }, a.prototype.getPrivateLoggingObject = function () { return { debug: Tools.isNullOrUndefined(this._debugFn) ? Tools.noop : this._debugFn, info: Tools.isNullOrUndefined(this._infoFn) ? Tools.noop : this._infoFn, warn: Tools.isNullOrUndefined(this._warnFn) ? Tools.noop : this._warnFn, error: Tools.isNullOrUndefined(this._errorFn) ? Tools.noop : this._errorFn, log: Tools.isNullOrUndefined(this._logFn) ? Tools.noop : this._logFn } }, a.prototype.delegator = function (b, c) { var d = function () { var d = [].slice.call(arguments), e = d.join(" "); a.interceptFuntion(e, c), b.apply(null, d) }; for (var e in b) d[e] = b[e]; return d }, a }(), ExceptionInterceptor = function () { function a(b) { var c = this; a.errorOnHttpCall = !1, this._interceptFunction = Tools.noop, b.decorator("$exceptionHandler", ["$delegate", function (b) { return c._origExceptionHandler = b, function (b) { a.errorOnHttpCall || c._interceptFunction(b), c._origExceptionHandler(b) } }]) } return a.prototype.setInterceptFunction = function (a) { this._interceptFunction = a }, a.prototype.getPrivateExceptionHanlder = function () { return Tools.isNullOrUndefined(this._origExceptionHandler) ? Tools.noop : this._origExceptionHandler }, a }(), Options = function () { function a() { this.applicationName = "", this.autoPageViewTracking = !0, this.autoStateChangeTracking = !1, this.autoLogTracking = !0, this.autoExceptionTracking = !0, this.sessionInactivityTimeout = 18e5, this.instrumentationKey = "", this.developerMode = !1, this.properties = {} } return a }(), HttpRequest = function () { function a() { } return a.prototype.send = function (a, b, c) { var d = new XMLHttpRequest; d.onerror = function () { c(0) }, d.onload = function () { 200 == d.status ? b() : c(d.status) }, d.open(a.method, a.url, !0); for (var e in a.headers) d.setRequestHeader(e, a.headers[e]); a.isOnline ? d.send(JSON.stringify(a.data)) : c(-1) }, a }(), HttpRequestOptions = function () { function a() { } return a }(), ApplicationInsights = function () { function a(a, b, c, d, e, f, g, h) { var i = this; this._sessionKey = "$$appInsights__session", this._userKey = "$$appInsights__uuid", this._deviceKey = "$$appInsights__device", this._deviceTypeKey = "$$appInsights__device__type", this._version = "angular:0.3.0", this._analyticsServiceUrl = "https://dc.services.visualstudio.com/v2/track", this._contentType = "application/json", this._localStorage = a, this._locale = b, this._window = c, this._location = d, this._httpRequestFactory = g, this.options = h, this._log = e.getPrivateLoggingObject(), this._exceptionHandler = f.getPrivateExceptionHanlder(), this._logInterceptor = e, this._exceptionInterceptor = f, this.options.autoLogTracking && this._logInterceptor.setInterceptFunction(function (a, b, c) { return i.trackTraceMessage(a, b, c) }), this.options.autoExceptionTracking && this._exceptionInterceptor.setInterceptFunction(function (a, b) { return i.trackException(a, b) }) } return a.prototype.getUserId = function () { var a = this._localStorage.get(this._userKey); return Tools.isNullOrUndefined(a) && (a = Tools.generateGuid(), this._localStorage.set(this._userKey, a)), a }, a.prototype.setUserId = function (a) { this._localStorage.set(this._userKey, a) }, a.prototype.getDeviceId = function () { var a = this._localStorage.get(this._deviceKey); return Tools.isNullOrUndefined(a) && (a = Tools.generateGuid(), this._localStorage.set(this._deviceKey, a)), a }, a.prototype.getDeviceType = function () { var a = this._localStorage.get(this._deviceTypeKey); return Tools.isNullOrUndefined(a) && (a = "Browser"), a }, a.prototype.setDeviceInfo = function (a, b) { this._localStorage.set(this._deviceKey, a), this._localStorage.set(this._deviceTypeKey, b) }, a.prototype.getOperationId = function () { var a = "$$appInsights__operationid", b = Tools.generateGuid(); return this._localStorage.set(a, b), b }, a.prototype.getStoredOperationId = function () { var a = "$$appInsights__operationid", b = this._localStorage.get(a); return Tools.isNullOrUndefined(b) && (b = this.getOperationId()), b }, a.prototype.makeNewSession = function (a) { var b = { id: a || Tools.generateGuid(), accessed: (new Date).getTime() }; return this._localStorage.set(this._sessionKey, b), b }, a.prototype.getSessionId = function () { var a = this._localStorage.get(this._sessionKey); if (Tools.isNullOrUndefined(a)) a = this.makeNewSession(null); else { var b = Tools.isNullOrUndefined(a.accessed) ? 0 : a.accessed, c = (new Date).getTime(); c - b > this.options.sessionInactivityTimeout ? a = this.makeNewSession(null) : (a.accessed = c, this._localStorage.set(this._sessionKey, a)) } return a.id }, a.prototype.validateMeasurements = function (a) { if (Tools.isNullOrUndefined(a)) return null; if (!Tools.isObject(a)) return this._log.warn("The value of the measurements parameter must be an object consisting of a string/number pairs."), null; var b = {}; for (var c in a) Tools.isNumber(a[c]) ? b[c] = a[c] : this._log.warn("The value of measurement " + c + " is not a number."); return b }, a.prototype.validateProperties = function (a) { if (Tools.isNullOrUndefined(a)) return null; if (!Tools.isObject(a)) return this._log.warn("The value of the properties parameter must be an object consisting of a string/string pairs."), null; var b = {}; for (var c in a) { var d = a[c]; Tools.isNullOrUndefined(d) || Tools.isObject(d) || Tools.isArray(d) ? this._log.warn("The value of property " + c + " could not be determined to be a string or number.") : b[c] = d } return b }, a.prototype.validateDuration = function (a) { return Tools.isNullOrUndefined(a) ? null : !Tools.isNumber(a) || 0 > a ? (this._log.warn("The value of the durations parameter must be a positive number"), null) : a }, a.prototype.validateSeverityLevel = function (a) { var b = ["debug", "info", "warn", "error"], c = b.indexOf(a); return c > -1 ? c : 0 }, a.prototype.sendData = function (a) { if (this.options.developerMode) return void console.log(a); var b = this._httpRequestFactory(), c = {}; c.Accept = this._contentType, c["Content-Type"] = this._contentType; var d = { method: "POST", url: this._analyticsServiceUrl, headers: c, data: a, isOnline: this._window.navigator.onLine ? !0 : !1 }; try { b.send(d, function () { ExceptionInterceptor.errorOnHttpCall = !1 }, function () { ExceptionInterceptor.errorOnHttpCall = !0 }) } catch (e) { } }, a.prototype.trackPageView = function (b, c, d, e, f) { var g = this.generateAppInsightsData(a.names.pageViews, a.types.pageViews, { ver: 1, url: Tools.isNullOrUndefined(c) ? this._location.absUrl() : c, name: Tools.isNullOrUndefined(b) ? this._location.path() : b, properties: this.validateProperties(d), measurements: this.validateMeasurements(e), duration: this.validateDuration(f) }); this.sendData(g) }, a.prototype.trackEvent = function (b, c, d) { var e = this.generateAppInsightsData(a.names.events, a.types.events, { ver: 1, name: b, properties: this.validateProperties(c), measurements: this.validateMeasurements(d) }); this.sendData(e) }, a.prototype.trackTraceMessage = function (b, c, d) { if (!Tools.isNullOrUndefined(b) && Tools.isString(b)) { this.options.properties && (d = d || {}, Tools.extend(d, this.options.properties)); var e = this.generateAppInsightsData(a.names.traceMessage, a.types.traceMessage, { ver: 1, message: b, severityLevel: this.validateSeverityLevel(c), properties: this.validateProperties(d) }); this.sendData(e) } }, a.prototype.trackMetric = function (b, c, d) { this.options.properties && (d = d || {}, Tools.extend(d, this.options.properties)); var e = this.generateAppInsightsData(a.names.metrics, a.types.metrics, { ver: 1, metrics: [{ name: b, value: c }], properties: this.validateProperties(d) }); this.sendData(e) }, a.prototype.trackException = function (b, c) { if (!Tools.isNullOrUndefined(b)) { var d = StackParser.parse(b), e = {}; Tools.copy(this.options.properties, e), c && (c = c || {}, Tools.extend(e, c)); var f = this.generateAppInsightsData(a.names.exception, a.types.exception, { ver: 1, handledAt: "Unhandled", exceptions: [{ typeName: b.name || "Unhandled", message: b.message || "Unhandled", stack: b.stack || "Unhandled", parsedStack: d, hasFullStack: !Tools.isNullOrUndefined(d) }], properties: e }); this.sendData(f) } }, a.prototype.defineUser = function (a) { this.setUserId(a) }, a.prototype.defineSession = function (a) { this.makeNewSession(a) }, a.prototype.defineDevice = function (a, b) { this.setDeviceInfo(a, b) }, a.prototype.generateAppInsightsData = function (b, c, d) { return this._commonProperties && (d.properties = d.properties || {}, Tools.extend(d.properties, this._commonProperties)), { name: b, time: (new Date).toISOString(), ver: 1, iKey: this.options.instrumentationKey, user: { id: this.getUserId(), type: "User" }, session: { id: this.getSessionId() }, operation: { id: b === a.names.pageViews ? this.getOperationId() : this.getStoredOperationId() }, device: { id: this.getDeviceId(), locale: this._locale.id, resolution: this._window.screen.availWidth + "x" + this._window.screen.availHeight, type: this.getDeviceType() }, internal: { sdkVersion: this._version }, data: { type: c, item: d } } }, a.prototype.setCommonProperties = function (a) { this.validateProperties(a), this._commonProperties = this._commonProperties || {}, Tools.extend(this._commonProperties, a) }, a.namespace = "Microsoft.ApplicationInsights.", a.names = { pageViews: a.namespace + "Pageview", traceMessage: a.namespace + "Message", events: a.namespace + "Event", metrics: a.namespace + "Metric", exception: a.namespace + "Exception" }, a.types = { pageViews: a.namespace + "PageViewData", traceMessage: a.namespace + "MessageData", events: a.namespace + "EventData", metrics: a.namespace + "MetricData", exception: a.namespace + "ExceptionData" }, a }(), httpRequestService = angular.module("$$ApplicationInsights-HttpRequestModule", []); httpRequestService.factory("$$applicationInsightsHttpRequestService", function () { return function () { return new HttpRequest } }); var angularAppInsights = angular.module("ApplicationInsightsModule", ["$$ApplicationInsights-HttpRequestModule"]), logInterceptor, exceptionInterceptor, tools = new Tools(angular); angularAppInsights.config(["$provide", "$httpProvider", function (a, b) { logInterceptor = new LogInterceptor(a, angular), exceptionInterceptor = new ExceptionInterceptor(a), b && b.interceptors && b.interceptors.push("ApplicationInsightsInterceptor") }]), angularAppInsights.provider("applicationInsightsService", function () { return new AppInsightsProvider }), angularAppInsights.run(["$rootScope", "$location", "applicationInsightsService", function (a, b, c) { var d, e; a.$on("$locationChangeStart", function () { c.options.autoPageViewTracking && !c.options.autoStateChangeTracking && (d = (new Date).getTime()) }), a.$on("$locationChangeSuccess", function (a, e) { if (c.options.autoPageViewTracking && !c.options.autoStateChangeTracking) { var f = (new Date).getTime() - d, g = c.options.applicationName + b.path(), h = c.options.properties; e && (g += "#" + e), c.trackPageView(g, null, h, null, f) } }), a.$on("$stateChangeStart", function () { c.options.autoPageViewTracking && c.options.autoStateChangeTracking && (e = (new Date).getTime()) }), a.$on("$stateChangeSuccess", function () { if (c.options.autoPageViewTracking && c.options.autoStateChangeTracking) { var a = (new Date).getTime() - e, d = c.options.applicationName + b.path(), f = c.options.properties; c.trackPageView(d, null, f, null, a) } }) }]), angularAppInsights.factory("ApplicationInsightsInterceptor", ["applicationInsightsService", "$q", function (a) { return { request: function (b) { return b ? (b.headers = b.headers || {}, b.headers["x-ms-request-root-id"] = a.getStoredOperationId(), b.headers["x-ms-request-id"] = a.getUserId(), b) : void 0 } } }]); var AppInsightsProvider = function () { function a() { var a = this; this._options = new Options, this.$get = ["$locale", "$window", "$location", "$rootScope", "$parse", "$document", "$$applicationInsightsHttpRequestService", function (b, c, d, e, f, g, h) { var i = new AppInsightsStorage({ window: c, rootScope: e, document: g, parse: f }); return new ApplicationInsights(i, b, c, d, logInterceptor, exceptionInterceptor, h, a._options) }] } return a.prototype.configure = function (a, b) { Tools.extend(this._options, b), this._options.instrumentationKey = a }, a }();